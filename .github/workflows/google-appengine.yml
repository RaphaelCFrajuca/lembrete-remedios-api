name: Deploy to Google App Engine

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Generate env file
        env:
          DATABASE_PROVIDER: ${{ vars.DATABASE_PROVIDER }}

          MONGODB_URI: ${{ secrets.MONGODB_URI }}
          MONGODB_DATABASE_NAME: ${{ vars.MONGODB_DATABASE_NAME }}

          MYSQL_HOST: ${{ vars.MYSQL_HOST }}
          MYSQL_PORT: ${{ vars.MYSQL_PORT }}
          MYSQL_USERNAME: ${{ secrets.MYSQL_USERNAME }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE_NAME: ${{ vars.MYSQL_DATABASE_NAME }}

          JWT_PUBLIC_CERT: ${{ secrets.JWT_PUBLIC_CERT }}
        run: |-
          echo "DATABASE_PROVIDER=$DATABASE_PROVIDER" > .env-for-app-yaml

          echo "MONGODB_URI=$MONGODB_URI" >> .env-for-app-yaml
          echo "MONGODB_DATABASE_NAME=$MONGODB_DATABASE_NAME" >> .env-for-app-yaml

          echo "MYSQL_HOST=$MYSQL_HOST" >> .env-for-app-yaml
          echo "MYSQL_PORT=$MYSQL_PORT" >> .env-for-app-yaml
          echo "MYSQL_USERNAME=$MYSQL_USERNAME" >> .env-for-app-yaml
          echo "MYSQL_PASSWORD=$MYSQL_PASSWORD" >> .env-for-app-yaml
          echo "MYSQL_DATABASE_NAME=$MYSQL_DATABASE_NAME" >> .env-for-app-yaml

          echo "JWT_PUBLIC_CERT=$JWT_PUBLIC_CERT" >> .env-for-app-yaml
  
      - name: Prepare app.yaml
        uses: mshick/fast-envsubst@v1
        with:
          env-file: .env-for-app-yaml
          in-file: app.yaml.template
          out-file: app.yaml

      - name: Show app.yaml
        run: cat app.yaml

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 16
          
      - name: 'Auth'
        uses: 'google-github-actions/auth@v1'
        with:
          credentials_json: ${{ secrets.GCLOUD_AUTH }}
          
      - name: Install dependencies
        run: npm install

      - name: Build the Nest.js app
        run: npm run build

      - name: Configure gcloud CLI
        uses: google-github-actions/deploy-appengine@v1
        with:
          project_id: ${{ secrets.PROJECT_ID }}
